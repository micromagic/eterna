<?xml version="1.0" encoding="utf-8"?>
<!--
  Copyright 2015 xinjunli (micromagic@sina.com).

  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->

<!--
	数据库的公共定义
-->
<eterna-config>
	<factory>
		<objs>

			<!-- 添加版本更新的执行脚本 -->
			<update name="addVersionScript">
				<prepared-sql noLine="true">
					insert into #const(version_script) (#auto[insertN])
					values (#auto[insertV])
				</prepared-sql>
				<parameters>
					<parameter name="versionName" type="String" />
					<parameter name="versionValue" type="int" />
					<parameter name="executed" type="byte" />
					<parameter name="scriptText" type="String" />
					<parameter name="scriptIndex" type="int" />
					<parameter name="execTime" type="Datetime" />
				</parameters>
			</update>

			<!-- 获取数据库的时间 -->
			<query name="getDataBaseTime">
				<prepared-sql>#const(now_script)</prepared-sql>
				<readers>
					<reader name="time" colIndex="1" />
				</readers>
			</query>

			<!-- 公共的数据库更新的执行对象 -->
			<update name="commonExec" generator="self.micromagic.dbvm.impl.CommonUpdate">
				<prepared-sql>#sub</prepared-sql>
			</update>

			<!-- 获取版本信息 -->
			<query name="getVersionValue">
				<prepared-sql noLine="true">
					select versionValue, errInfo
					from #const(version_info) where versionName = ?
				</prepared-sql>
				<parameters>
					<parameter name="versionName" type="String" />
				</parameters>
				<readers>
					<reader name="versionValue" type="int" />
					<reader name="errInfo" type="String" />
				</readers>
			</query>
			<!-- 添加版本信息 -->
			<update name="addVersionValue">
				<prepared-sql noLine="true">
					insert into #const(version_info) (versionName, versionValue, lastModified, errInfo)
					values (?, ?, #const(now), ?)
				</prepared-sql>
				<parameters>
					<parameter name="versionName" type="String" />
					<parameter name="versionValue" type="int" />
					<parameter name="errInfo" type="String" />
				</parameters>
			</update>
			<!-- 设置版本信息 -->
			<update name="setVersionValue">
				<prepared-sql noLine="true">
					update #const(version_info) set versionValue = ?, lastModified = #const(now),
							errInfo = ?
					where versionName = ?
				</prepared-sql>
				<parameters>
					<parameter name="versionValue" type="int" />
					<parameter name="errInfo" type="String" />
					<parameter name="versionName" type="String" />
				</parameters>
			</update>
			<!-- 添加版本日志 -->
			<update name="addVersionLog">
				<prepared-sql noLine="true">
					insert into #const(version_log) (versionName, versionValue, lastModified, errInfo)
					values (?, ?, #const(now), ?)
				</prepared-sql>
				<parameters>
					<parameter name="versionName" type="String" />
					<parameter name="versionValue" type="int" />
					<parameter name="errInfo" type="String" />
				</parameters>
			</update>
			
		</objs>
	</factory>
</eterna-config>
